alphaInit  #codeStream
{
        code
        #{
            const IOdictionary& d = static_cast<const IOdictionary&>(dict);
            const fvMesh& mesh = refCast<const fvMesh>(d.db());
            const dimensionedScalar pi("pi",dimless/dimLength,M_PI);
            scalarField fld
            (
              (
              scalar(0.1)
              *
              Foam::cos(scalar(0.2)*pi*mesh.C().component(0))
              *
              Foam::cos(scalar(0.2)*pi*mesh.C().component(1))
              +
              scalar(0.1)
              *
              Foam::cos(scalar(2.)*pi*mesh.C().component(0))
              *
              Foam::cos(scalar(2.)*pi*mesh.C().component(1))
              //+
              //scalar(1)
              )
              ///
              //scalar(2)
            );
            writeEntry(os,"",fld);
        #};

        //- Optional:
        codeInclude
        #{
            #include "fvCFD.H"
        #};

        //- Optional:
        codeOptions
        #{
            -I$(LIB_SRC)/finiteVolume/lnInclude \
            -I$(LIB_SRC)/meshTools/lnInclude
        #};

        #inputMode merge
};
